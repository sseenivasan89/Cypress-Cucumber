{
  "_from": "cucumber-tag-expressions@^1.1.1",
  "_id": "cucumber-tag-expressions@1.1.1",
  "_inBundle": false,
  "_integrity": "sha1-f1x7cACbwrZmWRv+ZIVFeL7e6Fo=",
  "_location": "/cucumber-tag-expressions",
  "_phantomChildren": {},
  "_requested": {
    "type": "range",
    "registry": true,
    "raw": "cucumber-tag-expressions@^1.1.1",
    "name": "cucumber-tag-expressions",
    "escapedName": "cucumber-tag-expressions",
    "rawSpec": "^1.1.1",
    "saveSpec": null,
    "fetchSpec": "^1.1.1"
  },
  "_requiredBy": [
    "/cucumber",
    "/cypress-cucumber-preprocessor"
  ],
  "_resolved": "https://registry.npmjs.org/cucumber-tag-expressions/-/cucumber-tag-expressions-1.1.1.tgz",
  "_shasum": "7f5c7b70009bc2b666591bfe64854578bedee85a",
  "_spec": "cucumber-tag-expressions@^1.1.1",
  "_where": "C:\\Projects\\Cypress-Cucumber\\node_modules\\cypress-cucumber-preprocessor",
  "author": {
    "name": "Cucumber Limited",
    "email": "cukes@googlegroups.com"
  },
  "bugs": {
    "url": "https://github.com/cucumber/tag-expressions-javascript/issues"
  },
  "bundleDependencies": false,
  "deprecated": false,
  "description": "Cucumber Tag Expression parser",
  "devDependencies": {
    "eslint": "^4.10.0",
    "eslint-config-eslint": "^4.0.0",
    "eslint-config-prettier": "^2.7.0",
    "eslint-plugin-prettier": "^2.0.1",
    "mocha": "^4.0.1",
    "nyc": "^11.3.0",
    "prettier": "^1.8.2",
    "sloc": "^0.2.0"
  },
  "homepage": "https://github.com/cucumber/tag-expressions-javascript",
  "keywords": [
    "cucumber",
    "tags",
    "tag",
    "parser",
    "boolean",
    "bool"
  ],
  "license": "MIT",
  "name": "cucumber-tag-expressions",
  "repository": {
    "type": "git",
    "url": "git://github.com/cucumber/tag-expressions-javascript.git"
  },
  "scripts": {
    "coverage": "nyc --reporter=html --reporter=text mocha",
    "eslint": "eslint src test",
    "eslint-fix": "eslint --fix src test",
    "mocha": "mocha",
    "sloc": "sloc lib",
    "sloccheck": "sloc --format csv lib | grep Total | cut -f3 -d',' | ruby -e 'sloc=STDIN.read.to_i; max=500; puts \"#{sloc} SLOC\"; raise \"#{sloc}>#{max}\" if sloc>max'",
    "test": "npm run eslint && npm run coverage"
  },
  "version": "1.1.1"
}
